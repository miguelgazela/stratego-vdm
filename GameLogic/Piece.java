//
package GameLogic;
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2013-12-02 by the VDM++ to JAVA Code Generator
// (v9.0.2 - Thu 14-Mar-2013 11:53:47 +0900)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// This file was genereted from "/Users/migueloliveira/Dropbox/projects/stratego/Piece/Piece.vdmpp".

// ***** VDMTOOLS START Name=package KEEP=NO
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO
import java.util.Set;
import java.util.HashSet;
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.Sentinel;
import jp.vdmtools.VDM.EvaluatePP;
import jp.vdmtools.VDM.CGException;
// ***** VDMTOOLS END Name=imports



public class Piece implements EvaluatePP {

// ***** VDMTOOLS START Name=rank KEEP=NO
  private volatile Number rank = null;
// ***** VDMTOOLS END Name=rank

// ***** VDMTOOLS START Name=name KEEP=NO
  private volatile String name = null;
// ***** VDMTOOLS END Name=name

// ***** VDMTOOLS START Name=hidden KEEP=NO
  private volatile Boolean hidden = null;
// ***** VDMTOOLS END Name=hidden

// ***** VDMTOOLS START Name=color KEEP=NO
  private volatile Object color = null;
// ***** VDMTOOLS END Name=color

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=PieceSentinel KEEP=NO
  class PieceSentinel extends Sentinel {

    public final int Piece = 0;

    public final int getName = 1;

    public final int getRank = 2;

    public final int getColor = 3;

    public final int isHidden = 4;

    public final int wasSpoted = 5;

    public final int nr_functions = 6;


    public PieceSentinel () throws CGException {}


    public PieceSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=PieceSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return Boolean.TRUE;
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new PieceSentinel(this);
    }
    catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=vdm_init_Piece KEEP=NO
  private void vdm_init_Piece () {
    try {
      setSentinel();
    }
    catch (Exception e) {
      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_Piece


// ***** VDMTOOLS START Name=inv_Piece KEEP=NO
  public Boolean inv_Piece () {
    Boolean rexpr_2 = null;
    Boolean var1_3 = null;
    if ((var1_3 = Boolean.valueOf(rank.intValue() >= 0)).booleanValue()) 
      var1_3 = Boolean.valueOf(rank.intValue() <= 11);
    if ((rexpr_2 = var1_3).booleanValue()) {
      Boolean var2_10 = null;
      Boolean var1_11 = null;
      if ((var1_11 = Boolean.valueOf(name.length() > 0)).booleanValue()) {
        Set var2_18 = new HashSet();
        var2_18.add(new String("FLAG"));
        var2_18.add(new String("SPY"));
        var2_18.add(new String("SCOUT"));
        var2_18.add(new String("MINER"));
        var2_18.add(new String("SERGEANT"));
        var2_18.add(new String("LIUTENANT"));
        var2_18.add(new String("CAPTAIN"));
        var2_18.add(new String("MAJOR"));
        var2_18.add(new String("COLONEL"));
        var2_18.add(new String("GENERAL"));
        var2_18.add(new String("MARSHAL"));
        var2_18.add(new String("BOMB"));
        var1_11 = Boolean.valueOf(UTIL.Contains(var2_18, name));
      }
      if ((var2_10 = var1_11).booleanValue()) {
        Set var2_33 = new HashSet();
        var2_33.add(new quotes.Blue());
        var2_33.add(new quotes.Red());
        var2_10 = Boolean.valueOf(UTIL.Contains(var2_33, color));
      }
      rexpr_2 = var2_10;
    }
    return rexpr_2;
  }
// ***** VDMTOOLS END Name=inv_Piece


// ***** VDMTOOLS START Name=Piece KEEP=NO
  public Piece () throws CGException {
    vdm_init_Piece();
  }
// ***** VDMTOOLS END Name=Piece


// ***** VDMTOOLS START Name=Piece#3|Number|Object|String KEEP=NO
  public Piece (final Number rank_, final Object color_, final String name_) throws CGException {
    vdm_init_Piece();
    if (!this.pre_Piece(rank_, color_, name_).booleanValue()) 
      UTIL.RunTime("Precondition failure in Piece");
    {
      final Number atom_1 = rank_;
      final Object atom_2 = color_;
      final String atom_3 = name_;
      final Boolean atom_4 = Boolean.TRUE;
      rank = UTIL.NumberToInt(UTIL.clone(atom_1));
      color = UTIL.clone(atom_2);
      name = UTIL.ConvertToString(UTIL.clone(atom_3));
      hidden = (Boolean)UTIL.clone(atom_4);
    }
  }
// ***** VDMTOOLS END Name=Piece#3|Number|Object|String


// ***** VDMTOOLS START Name=pre_Piece#3|Number|Object|String KEEP=NO
  public Boolean pre_Piece (final Number rank_, final Object color_, final String name_) throws CGException {
    Boolean varRes_4 = null;
    Set var2_7 = new HashSet();
    var2_7 = new HashSet();
    for (int count_10 = 0; count_10 <= 11; count_10++) 
      var2_7.add(new Integer(count_10));
    if ((varRes_4 = Boolean.valueOf(UTIL.Contains(var2_7, rank_))).booleanValue()) {
      Set var2_15 = new HashSet();
      var2_15.add(new quotes.Blue());
      var2_15.add(new quotes.Red());
      varRes_4 = Boolean.valueOf(UTIL.Contains(var2_15, color_));
    }
    return varRes_4;
  }
// ***** VDMTOOLS END Name=pre_Piece#3|Number|Object|String


// ***** VDMTOOLS START Name=getRank KEEP=NO
  public Number getRank () throws CGException {
    sentinel.entering(((PieceSentinel)sentinel).getRank);
    try {
      return rank;
    }
    finally {
      sentinel.leaving(((PieceSentinel)sentinel).getRank);
    }
  }
// ***** VDMTOOLS END Name=getRank


// ***** VDMTOOLS START Name=getColor KEEP=NO
  public Object getColor () throws CGException {
    sentinel.entering(((PieceSentinel)sentinel).getColor);
    try {
      return color;
    }
    finally {
      sentinel.leaving(((PieceSentinel)sentinel).getColor);
    }
  }
// ***** VDMTOOLS END Name=getColor


// ***** VDMTOOLS START Name=getName KEEP=NO
  public String getName () throws CGException {
    sentinel.entering(((PieceSentinel)sentinel).getName);
    try {
      return name;
    }
    finally {
      sentinel.leaving(((PieceSentinel)sentinel).getName);
    }
  }
// ***** VDMTOOLS END Name=getName


// ***** VDMTOOLS START Name=isHidden KEEP=NO
  public Boolean isHidden () throws CGException {
    sentinel.entering(((PieceSentinel)sentinel).isHidden);
    try {
      return hidden;
    }
    finally {
      sentinel.leaving(((PieceSentinel)sentinel).isHidden);
    }
  }
// ***** VDMTOOLS END Name=isHidden


// ***** VDMTOOLS START Name=wasSpoted KEEP=NO
  public void wasSpoted () throws CGException {
    sentinel.entering(((PieceSentinel)sentinel).wasSpoted);
    try {
      hidden = Boolean.FALSE;
      if (!this.inv_Piece().booleanValue()) 
        UTIL.RunTime("Instance invariant failure in Piece");
    }
    finally {
      sentinel.leaving(((PieceSentinel)sentinel).wasSpoted);
    }
  }
// ***** VDMTOOLS END Name=wasSpoted

}
;
