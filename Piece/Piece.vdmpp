class Piece

  types
    public ColorPiece = <Blue> | <Red>;
    public String = seq of char;

  instance variables
    -- 0: Flag, 1 to 10: check wikipedia, 11: mines
    private rank: nat;
    inv rank >= 0 and rank <= 11;
    
    private name: String;
    inv len name > 0 and name in set {"FLAG", "SPY", "SCOUT", "MINER", "SERGEANT", "LIUTENANT", "CAPTAIN", "MAJOR", "COLONEL", "GENERAL", "MARSHAL", "BOMB"};

    private hidden: bool;

    private color: ColorPiece;
    inv color in set {<Blue>, <Red>};

  operations

    public Piece: nat * ColorPiece * String ==> Piece
    Piece(rank_, color_, name_) == (
        atomic (
        rank := rank_;
        color := color_;
        name := name_;
        hidden := true;
        );
        return self
    )
    pre (rank_ in set {0,...,11} and color_ in set {<Blue>, <Red>})
    post (rank = rank_ and color = color_);

    -- consult operations
    public getRank: () ==> nat
    getRank() == (
      return rank
    )
    post RESULT = rank;

    public getColor: () ==> ColorPiece
    getColor() == (
      return color
    )
    post RESULT = color;

    public getName: () ==> String
    getName() == (
      return name
    )
    post RESULT = name and len RESULT > 0;

    public isHidden: () ==> bool
    isHidden() == (
      return hidden;
    )
    post RESULT = hidden;

    public wasSpoted: () ==> ()
    wasSpoted() == (
      hidden := false;
    )
    post hidden = false;

end Piece
